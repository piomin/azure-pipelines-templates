parameters:
  - name: feedName
    default: ''
  - name: libName
    default: ''
  - name: projectPath
    default: ''
  - name: testProjectPath
    default: ''
  - name: sonarProjectKey
    default: ''
  - name: dotnetVersion
    default: '9.x'

stages:
  - stage: Build
    displayName: 'Build/Publish'
    jobs:
      - job: Build_And_Publish
        steps:
          - checkout: appRepo
          - task: UseDotNet@2
            displayName: 'Init'
            inputs:
              version: ${{ parameters.dotnetVersion }}

          - task: SonarQubePrepare@7
            inputs:
              SonarQube: SonarQube
              scannerMode: 'Other'
              displayName: Analysis Preparation
              configMode: 'manual'
              extraProperties: |
                sonar.organization=piomin
                sonar.projectKey=${{ parameters.sonarProjectKey }}
                sonar.projectBaseDir=src/${{ parameters.libName }}

          - task: DotNetCoreCLI@2
            displayName: 'Restore packages'
            inputs:
              command: 'restore'
              projects: ${{ parameters.projectPath }}
              feedsToUse: 'select'
              vstsFeed: ${{ parameters.feedName }}

          - task: DotNetCoreCLI@2
            displayName: 'Build Library'
            inputs:
              command: 'build'
              projects: ${{ parameters.projectPath }}
              arguments: '-c Release --no-restore'

          - task: DotNetCoreCLI@2
            displayName: 'Run tests'
            inputs:
              command: 'test'
              projects: ${{ parameters.testProjectPath }}
              arguments: '-c Release'
              publishTestResults: true
              testRunTitle: 'Unit Tests'

          - task: SonarQubeAnalyze@7
          - task: SonarQubePublish@7
            inputs:
              pollingTimeoutSec: '300'
            displayName: Publish SonarQube Results

          - task: DotNetCoreCLI@2
            displayName: 'Pack package'
            inputs:
              command: 'pack'
              packagesToPack: ${{ parameters.projectPath }}
              arguments: '-c Release'

          - task: DotNetCoreCLI@2
            displayName: 'Publish package to Azure Artifacts'
            inputs:
              command: 'push'
              publishVstsFeed: ${{ parameters.feedName }}