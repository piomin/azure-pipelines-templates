stages:
  - stage: Build
    jobs:
      - job: BuildAndTest
        steps:

          - task: UseDotNet@2
            inputs:
              version: '9.x'
              includePreviewVersions: true

          - task: NuGetToolInstaller@1
            inputs:
              versionSpec: '6.x'
              checkLatest: true

          - task: PowerShell@2
            displayName: 'Get Project Version'
            name: SetVersion
            inputs:
              targetType: 'inline'
              script: |
                $xml = [Xml] (Get-Content $(solution))
                $version = $xml.Project.PropertyGroup.Version
                Write-Host "##vso[task.setvariable variable=appVersion;isOutput=true]$version"
                Write-Host "##vso[task.setvariable variable=projectVersion]$version"
                Write-Host "Project version: $version"

          - task: NuGetCommand@2
            displayName: 'NuGet restore'
            inputs:
              command: 'restore'
              restoreSolution: '$(solution)'
              feedsToUse: 'select'

          - task: DotNetCoreCLI@2
            displayName: 'Run Tests'
            inputs:
              command: 'test'
              projects: 'dotnet test person-service.tests/person-service.tests.csproj'
              arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" --logger trx -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'
              publishTestResults: true

          - task: PublishCodeCoverageResults@2
            displayName: 'Publish Code Coverage'
            inputs:
              summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
              failIfCoverageEmpty: false

          - task: DotNetCoreCLI@2
            displayName: 'Build and Publish'
            inputs:
              command: 'publish'
              publishWebProjects: false
              projects: '$(solution)'
              arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              versioningScheme: 'byEnvVar'
              versionEnvVar: 'projectVersion'
              zipAfterPublish: false